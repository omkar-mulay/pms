{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\pms\\\\frontend\\\\src\\\\component\\\\ShowProgres.js\",\n    _s = $RefreshSig$();\n\nimport { VictoryPie } from 'victory';\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowProgress() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const search = useLocation().search; //const [pie1, setPie1] = useState([]);\n  //const [pie2, setPie2] = useState([]);\n  //const [pie3, setPie3] = useState([]);\n\n  let pie1 = \"\";\n  let pie2 = \"\";\n  let pie3 = \"\";\n  const projectid = new URLSearchParams(search).get('projectid');\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  let var1 = \"\";\n  let var2 = \"\";\n  let var3 = \"\"; //let sampleData;\n\n  const fetchData = () => {\n    fetch(\"http://localhost:8080/view_status_count?projectid=\" + projectid).then(response => {\n      return response.json();\n    }).then(data => {\n      setTasks(data);\n      console.log(data);\n      console.log(data[0]);\n      pie1 = new String(data[0]).split(','); //setPie1(data[0]).split(',');\n\n      pie2 = new String(data[1]).split(',');\n      pie3 = new String(data[2]).split(','); //let count = str.split(',');\n\n      var1 = pie1[0];\n      var2 = pie2[0];\n      var3 = pie3[0];\n      console.log(var1);\n      console.log(var2);\n      console.log(var3);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const sampleData = [{\n    x: \"Complete\",\n    y: var1\n  }, {\n    x: \"In Progress\",\n    y: var2\n  }, {\n    x: \"To do\",\n    y: var3\n  }];\n  const data = {\n    labels: ['Complete', 'In Progress', 'To do'],\n    datasets: [{\n      label: '# of Votes',\n      data: [var1, var2, var3],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      height: 600,\n      width: 600\n    },\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowProgress, \"ClRCVUtA4oDeaWMrtIbTvOQhQuc=\", false, function () {\n  return [useLocation];\n});\n\n_c = ShowProgress;\nexport default ShowProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowProgress\");","map":{"version":3,"sources":["C:/Users/omkar/pms/frontend/src/component/ShowProgres.js"],"names":["VictoryPie","useEffect","useState","Link","useLocation","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","ShowProgress","tasks","setTasks","search","pie1","pie2","pie3","projectid","URLSearchParams","get","register","var1","var2","var3","fetchData","fetch","then","response","json","data","console","log","String","split","sampleData","x","y","labels","datasets","label","backgroundColor","borderColor","borderWidth","height","width"],"mappings":"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","sourcesContent":["import {VictoryPie} from 'victory';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nfunction ShowProgress(){\r\n\r\n    const [tasks, setTasks] = useState([])\r\n    const search = useLocation().search;\r\n\r\n    //const [pie1, setPie1] = useState([]);\r\n    //const [pie2, setPie2] = useState([]);\r\n    //const [pie3, setPie3] = useState([]);\r\n\r\n    let pie1 = \"\";\r\n    let pie2 = \"\";\r\n    let pie3 = \"\";\r\n    const projectid = new URLSearchParams(search).get('projectid');\r\n\r\n    ChartJS.register(ArcElement, Tooltip, Legend);\r\n    let var1 = \"\";\r\n    let var2 = \"\";\r\n    let var3 = \"\";\r\n    //let sampleData;\r\n\r\n    const fetchData = () => {\r\n        fetch(\"http://localhost:8080/view_status_count?projectid=\"+projectid)\r\n          .then(response => {\r\n            return response.json()\r\n          })\r\n          .then(data => {\r\n            setTasks(data)\r\n            console.log(data)\r\n            console.log(data[0])\r\n            pie1 = new String(data[0]).split(',');\r\n            //setPie1(data[0]).split(',');\r\n            pie2 = new String(data[1]).split(',');\r\n            pie3 = new String(data[2]).split(',');\r\n            //let count = str.split(',');\r\n            var1 = pie1[0];\r\n            var2 = pie2[0];\r\n            var3 = pie3[0];\r\n            console.log(var1);\r\n            console.log(var2);            \r\n            console.log(var3);\r\n          })\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n      }, [])\r\n\r\n    const sampleData = [\r\n        {x:\"Complete\", y: var1},\r\n        {x:\"In Progress\", y: var2},\r\n        {x:\"To do\", y: var3}\r\n    ];\r\n\r\n    const data = {\r\n        labels: ['Complete', 'In Progress', 'To do'],\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: [var1, var2, var3],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\nreturn(\r\n    <div className=\"container\" style={{height:600, width: 600}}>\r\n        {/* <VictoryPie\r\n            colorScale={[\"cyan\", \"orange\", \"navy\" ]}\r\n            data={[\r\n                {x:\"Complete\", y: var1},\r\n                {x:\"In Progress\", y: var2},\r\n                {x:\"To do\", y: var3}\r\n            ]}\r\n            \r\n        /> */}\r\n        <Pie data={data} />\r\n\r\n    </div>\r\n);    \r\n}\r\n\r\nexport default ShowProgress;"]},"metadata":{},"sourceType":"module"}