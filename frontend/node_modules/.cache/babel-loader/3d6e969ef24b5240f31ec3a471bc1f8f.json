{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\pms\\\\frontend\\\\src\\\\component\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport mystore from './store';\nimport { Form } from \"react-bootstrap\";\nimport { MDBBtn, MDBInput } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  let navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitForm = ev => {\n    ev.preventDefault();\n    const reqOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    };\n    fetch(\"http://localhost:8080/login\", reqOptions).then(resp => resp.json()).then(obj => {\n      console.log(obj);\n      localStorage.setItem(\"loggedinuser\", JSON.stringify(obj));\n      mystore.dispatch({\n        type: 'LOGGEDIN'\n      });\n      let role = JSON.parse(localStorage.getItem(\"loggedinuser\")).role;\n      console.log(role);\n\n      if (obj[3] == 'admin') {\n        navigate(\"/Admin\");\n      } else if (obj[3] == 'client') {\n        navigate(\"/Client\");\n      } else if (obj[3] == 'manager') {\n        navigate(\"/Manager\");\n      } else if (obj[3] == 'employee') {\n        navigate(\"/Employee\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      width: '40%',\n      height: '50%',\n      marginTop: '8%',\n      marginLeft: '25',\n      marginRight: '25%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '23rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n          label: \"Enter username\",\n          name: \"username\",\n          type: \"text\",\n          size: \"lg\",\n          onChange: ev => setUsername(ev.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          label: \"Enter password\",\n          name: \"password\",\n          type: \"password\",\n          size: \"lg\",\n          onChange: ev => setPassword(ev.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          type: \"submit\",\n          onClick: ev => submitForm(ev),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"9ByEJj0fDwRXGCKeqp+9669dMm8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/omkar/pms/frontend/src/component/Login.js"],"names":["React","useState","useNavigate","mystore","Form","MDBBtn","MDBInput","Login","navigate","username","setUsername","password","setPassword","submitForm","ev","preventDefault","reqOptions","method","headers","body","JSON","stringify","fetch","then","resp","json","obj","console","log","localStorage","setItem","dispatch","type","role","parse","getItem","width","height","marginTop","marginLeft","marginRight","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,kBAAjC;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,MAAIC,QAAQ,GAAGN,WAAW,EAA1B;AACA,QAAK,CAACO,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAK,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMY,UAAU,GAAEC,EAAD,IAAM;AACnBA,IAAAA,EAAE,CAACC,cAAH;AACA,UAAMC,UAAU,GAAG;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV,OAFM;AAKfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBZ,QAAAA,QAAQ,EAAEA,QADO;AAEjBE,QAAAA,QAAQ,EAAEA;AAFO,OAAf;AALS,KAAnB;AAUAW,IAAAA,KAAK,CAAC,6BAAD,EAA+BN,UAA/B,CAAL,CACCO,IADD,CACMC,IAAI,IAAGA,IAAI,CAACC,IAAL,EADb,EAECF,IAFD,CAEMG,GAAG,IAAG;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEVG,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAsCV,IAAI,CAACC,SAAL,CAAeK,GAAf,CAAtC;AAEAvB,MAAAA,OAAO,CAAC4B,QAAR,CAAiB;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAjB;AAEA,UAAIC,IAAI,GAAIb,IAAI,CAACc,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,cAArB,CAAX,CAAD,CAAmDF,IAA9D;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;;AACA,UAAGP,GAAG,CAAC,CAAD,CAAH,IAAQ,OAAX,EACA;AACIlB,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACH,OAHD,MAIK,IAAGkB,GAAG,CAAC,CAAD,CAAH,IAAQ,QAAX,EACL;AACIlB,QAAAA,QAAQ,CAAC,SAAD,CAAR;AACH,OAHI,MAIA,IAAGkB,GAAG,CAAC,CAAD,CAAH,IAAQ,SAAX,EACL;AACIlB,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACH,OAHI,MAIA,IAAGkB,GAAG,CAAC,CAAD,CAAH,IAAQ,UAAX,EACL;AACIlB,QAAAA,QAAQ,CAAC,WAAD,CAAR;AACH;AAER,KA3BG;AA4BP,GAxCG;;AA0CA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAC4B,MAAAA,KAAK,EAAE,KAAR;AAAeC,MAAAA,MAAM,EAAC,KAAtB;AAA6BC,MAAAA,SAAS,EAAE,IAAxC;AAA8CC,MAAAA,UAAU,EAAE,IAA1D;AAAgEC,MAAAA,WAAW,EAAE;AAA7E,KAAlC;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI;AAAK,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,gBAAhB;AAAiC,UAAA,IAAI,EAAC,UAAtC;AAAiD,UAAA,IAAI,EAAC,MAAtD;AAA6D,UAAA,IAAI,EAAC,IAAlE;AAAuE,UAAA,QAAQ,EAAGtB,EAAD,IAAMJ,WAAW,CAACI,EAAE,CAAC2B,MAAH,CAAUC,KAAX;AAAlG;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,gBAAhB;AAAiC,UAAA,IAAI,EAAC,UAAtC;AAAiD,UAAA,IAAI,EAAC,UAAtD;AAAiE,UAAA,IAAI,EAAC,IAAtE;AAA2E,UAAA,QAAQ,EAAG5B,EAAD,IAAMF,WAAW,CAACE,EAAE,CAAC2B,MAAH,CAAUC,KAAX;AAAtG;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAG5B,EAAD,IAAMD,UAAU,CAACC,EAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA/DQP,K;UAEUL,W;;;KAFVK,K;AAiET,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport mystore from './store';\r\nimport { Form } from \"react-bootstrap\";\r\nimport { MDBBtn, MDBInput } from 'mdb-react-ui-kit';\r\n\r\nfunction Login() {\r\n\r\n    let navigate = useNavigate();\r\n    const[username, setUsername] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n\r\n    const submitForm=(ev)=>{\r\n        ev.preventDefault();\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers :{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            })\r\n        }\r\n        fetch(\"http://localhost:8080/login\",reqOptions)\r\n        .then(resp=> resp.json())\r\n        .then(obj=> { console.log(obj);\r\n\r\n            localStorage.setItem(\"loggedinuser\" , JSON.stringify(obj));\r\n            \r\n            mystore.dispatch({type: 'LOGGEDIN'});\r\n            \r\n            let role = (JSON.parse(localStorage.getItem(\"loggedinuser\"))).role;\r\n            console.log(role);\r\n            if(obj[3]=='admin')\r\n            {\r\n                navigate(\"/Admin\");\r\n            }\r\n            else if(obj[3]=='client')\r\n            {\r\n                navigate(\"/Client\");\r\n            }\r\n            else if(obj[3]=='manager')\r\n            {\r\n                navigate(\"/Manager\");\r\n            }\r\n            else if(obj[3]=='employee')\r\n            {\r\n                navigate(\"/Employee\");\r\n            }\r\n            \r\n    });\r\n}\r\n\r\n    return (\r\n        <div className=\"container\" style={{width: '40%', height:'50%', marginTop: '8%', marginLeft: '25', marginRight: '25%'}}>\r\n            <Form>\r\n                <div style={{ width: '23rem' }}>\r\n                    <MDBInput label='Enter username' name='username' type='text' size='lg' onChange={(ev)=>setUsername(ev.target.value)}/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter password' name='password' type='password' size='lg' onChange={(ev)=>setPassword(ev.target.value)}/>\r\n                    <br />\r\n                    <MDBBtn type=\"submit\" onClick={(ev)=>submitForm(ev)}>Login</MDBBtn>\r\n                </div>\r\n            </Form>\r\n            \r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}