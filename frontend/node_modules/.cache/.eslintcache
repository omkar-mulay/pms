[{"C:\\Users\\omkar\\pms\\frontend\\src\\index.js":"1","C:\\Users\\omkar\\pms\\frontend\\src\\App.js":"2","C:\\Users\\omkar\\pms\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Login.js":"4","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Admin.js":"5","C:\\Users\\omkar\\pms\\frontend\\src\\component\\store.js":"6","C:\\Users\\omkar\\pms\\frontend\\src\\component\\reducer.js":"7","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Client.js":"8","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Manager.js":"9","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Employee.js":"10","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Registration.js":"11","C:\\Users\\omkar\\pms\\frontend\\src\\component\\CreateProject.js":"12","C:\\Users\\omkar\\pms\\frontend\\src\\component\\UpdateProject.js":"13","C:\\Users\\omkar\\pms\\frontend\\src\\component\\InsertTask.js":"14","C:\\Users\\omkar\\pms\\frontend\\src\\component\\UpdateAccount.js":"15","C:\\Users\\omkar\\pms\\frontend\\src\\component\\ChangePassword.js":"16","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Logout.js":"17","C:\\Users\\omkar\\pms\\frontend\\src\\component\\ProjectDetails.js":"18","C:\\Users\\omkar\\pms\\frontend\\src\\component\\LandingPage.js":"19","C:\\Users\\omkar\\pms\\frontend\\src\\component\\ShowTasks.js":"20","C:\\Users\\omkar\\pms\\frontend\\src\\component\\UpdateTask.js":"21","C:\\Users\\omkar\\pms\\frontend\\src\\component\\UpdateStatus.js":"22","C:\\Users\\omkar\\pms\\frontend\\src\\component\\ShowProgres.js":"23","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Home.js":"24"},{"size":730,"mtime":1649238558746,"results":"25","hashOfConfig":"26"},{"size":2843,"mtime":1650001507664,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":2424,"mtime":1650002374128,"results":"29","hashOfConfig":"26"},{"size":5109,"mtime":1650038078631,"results":"30","hashOfConfig":"26"},{"size":186,"mtime":1648707467769,"results":"31","hashOfConfig":"26"},{"size":256,"mtime":1648707461438,"results":"32","hashOfConfig":"26"},{"size":4283,"mtime":1650038212536,"results":"33","hashOfConfig":"26"},{"size":4146,"mtime":1650038506668,"results":"34","hashOfConfig":"26"},{"size":4297,"mtime":1650038942202,"results":"35","hashOfConfig":"26"},{"size":6195,"mtime":1650002854417,"results":"36","hashOfConfig":"26"},{"size":7684,"mtime":1650006420336,"results":"37","hashOfConfig":"26"},{"size":6302,"mtime":1649679295373,"results":"38","hashOfConfig":"26"},{"size":6702,"mtime":1650009659059,"results":"39","hashOfConfig":"26"},{"size":3242,"mtime":1650003255126,"results":"40","hashOfConfig":"26"},{"size":2768,"mtime":1650003300148,"results":"41","hashOfConfig":"26"},{"size":606,"mtime":1649867001176,"results":"42","hashOfConfig":"26"},{"size":4856,"mtime":1650039246399,"results":"43","hashOfConfig":"26"},{"size":337,"mtime":1649867284407,"results":"44","hashOfConfig":"26"},{"size":5912,"mtime":1650039624065,"results":"45","hashOfConfig":"26"},{"size":5945,"mtime":1650003401102,"results":"46","hashOfConfig":"26"},{"size":3895,"mtime":1649765138563,"results":"47","hashOfConfig":"26"},{"size":4313,"mtime":1650007518558,"results":"48","hashOfConfig":"26"},{"size":1093,"mtime":1650001327758,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},"y0o7vf",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"54"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"54"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"54"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"54"},"C:\\Users\\omkar\\pms\\frontend\\src\\index.js",["136"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Admin from './component/Admin';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css'\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n      \n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["137","138"],"C:\\Users\\omkar\\pms\\frontend\\src\\App.js",["139","140","141"],[],"import React from 'react';\nimport { Route, Routes} from 'react-router-dom';\nimport './App.css';\nimport Login from './component/Login';\nimport Admin from './component/Admin';\nimport Client from './component/Client';\nimport Manager from './component/Manager';\nimport Employee from './component/Employee';\nimport Registration from './component/Registration';\nimport CreateProject from './component/CreateProject';\nimport InsertTask from './component/InsertTask';\nimport UpdateAccount from './component/UpdateAccount';\nimport UpdateProject from './component/UpdateProject';\nimport ChangePassword from './component/ChangePassword';\nimport Logout from './component/Logout';\nimport ProjectDetails from './component/ProjectDetails';\nimport LandinPage from './component/LandingPage';\nimport ShowTasks from './component/ShowTasks';\nimport UpdateTask from './component/UpdateTask';\nimport UpdateStatus from './component/UpdateStatus';\nimport ShowProgress from './component/ShowProgres';\nimport Home from './component/Home';\nimport { Container, Nav, Navbar, Overlay } from \"react-bootstrap\";\n\n\nfunction App() {\n    return (\n    <div className='App'>\n      <div className=\"overlay\">\n            <div className=\"content\">\n                <div className=\"content\">\n                    <Navbar bg=\"dark\" variant=\"dark\">\n                        <Container>\n                            <Navbar.Brand href=\"/\" style={{textAlign : \"center\"}}><span style={{ margin: '10px' }}></span>Project Management System</Navbar.Brand>\n                            </Container>\n                    </Navbar>\n                </div>\n            </div>\n      </div>\n      <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/Admin\" element={<Admin />} />\n          <Route path=\"/Client\" element={<Client />} />\n          <Route path=\"/Manager\" element={<Manager />} />\n          <Route path=\"/Employee\" element={<Employee />} />\n          <Route path=\"/Registration\" element={<Registration />} />\n          <Route path=\"/CreateProject\" element={<CreateProject />} />\n          <Route path=\"/InsertTask\" element={<InsertTask />} />\n          <Route path=\"/UpdateAccount\" element={<UpdateAccount />} />\n          <Route path=\"/UpdateProject\" element={<UpdateProject />} />\n          <Route path=\"/ChangePassword\" element={<ChangePassword />} />\n          <Route path=\"/Logout\" element={<Logout />} />\n          <Route path=\"/ProjectDetails\" element={<ProjectDetails />} />\n          <Route path=\"/ShowTasks\" element={<ShowTasks />} />\n          <Route path=\"/UpdateTask\" element={<UpdateTask />} />\n          <Route path=\"/UpdateStatus\" element={<UpdateStatus />} />\n          <Route path=\"/ShowProgress\" element={<ShowProgress />} />\n          \n      </Routes>\n    </div>\n    )}\n\nexport default App;","C:\\Users\\omkar\\pms\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\Login.js",["142","143","144","145"],[],"import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport mystore from './store';\r\nimport { Form } from \"react-bootstrap\";\r\nimport { MDBBtn, MDBInput } from 'mdb-react-ui-kit';\r\n\r\nfunction Login() {\r\n\r\n    let navigate = useNavigate();\r\n    const[username, setUsername] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n\r\n    const submitForm=(ev)=>{\r\n        ev.preventDefault();\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers :{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            })\r\n        }\r\n        fetch(\"http://localhost:8080/login\",reqOptions)\r\n        .then(resp=> resp.json())\r\n        .then(obj=> { console.log(obj);\r\n\r\n            localStorage.setItem(\"loggedinuser\" , JSON.stringify(obj));\r\n            \r\n            mystore.dispatch({type: 'LOGGEDIN'});\r\n            \r\n            let role = (JSON.parse(localStorage.getItem(\"loggedinuser\"))).role;\r\n            console.log(role);\r\n            if(obj[3]=='admin')\r\n            {\r\n                navigate(\"/Admin\");\r\n            }\r\n            else if(obj[3]=='client')\r\n            {\r\n                navigate(\"/Client\");\r\n            }\r\n            else if(obj[3]=='manager')\r\n            {\r\n                navigate(\"/Manager\");\r\n            }\r\n            else if(obj[3]=='employee')\r\n            {\r\n                navigate(\"/Employee\");\r\n            }\r\n            \r\n    });\r\n}\r\n\r\n    return (\r\n        \r\n        <div className=\"container\" style={{width: '40%', height:'50%', marginTop: '8%', marginLeft: '25', marginRight: '25%', border: '1px'}}>\r\n            <span style={{margin: '10px'}}></span>\r\n            <Form>\r\n                <div style={{ width: '23rem' }}>\r\n                    <MDBInput label='Enter username' name='username' type='text' size='lg' onChange={(ev)=>setUsername(ev.target.value)}/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter password' name='password' type='password' size='lg' onChange={(ev)=>setPassword(ev.target.value)}/>\r\n                    <br />\r\n                    <MDBBtn type=\"submit\" onClick={(ev)=>submitForm(ev)}>Login</MDBBtn>\r\n                </div>\r\n            </Form>\r\n            \r\n            </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Admin.js",[],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\store.js",[],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\reducer.js",["146"],[],"\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'LOGGEDIN' :\r\n            return {...state, loggedin: true};\r\n\r\n        case 'LOGGEDOUT' :\r\n            return {...state, loggedin: false};\r\n    }\r\n}\r\n\r\nexport default reducer;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Client.js",["147"],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\Manager.js",["148"],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\Employee.js",["149"],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\Registration.js",["150"],[],"import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport mystore from './store';\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarLink,\r\n    MDBNavbarToggler,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBInput,\r\n    MDBBtn\r\n  } from 'mdb-react-ui-kit';\r\n\r\nfunction Registration(){\r\n\r\n    let navigate = useNavigate();\r\n    const[username, setUsername] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const[fname, setFname] = useState(\"\");\r\n    const[lname, setLname] = useState(\"\");\r\n    const[email, setEmail] = useState(\"\");\r\n    const[contactno, setContactno] = useState(\"\");\r\n    const[role, setRole] = useState(\"\");\r\n\r\n    const submitForm=(ev)=>{\r\n        ev.preventDefault();\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers :{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n                fname: fname,\r\n                lname: lname,\r\n                email: email,\r\n                contactno: contactno,\r\n                role: role\r\n            })\r\n        }\r\n        console.log(role);\r\n        if(role===\"employee\"|| role===\"manager\"){\r\n            fetch(\"http://localhost:8080/reg_emp\",reqOptions)\r\n            .then(resp=> {\r\n                if(resp.status===200){\r\n                    alert(\"User registration successful!\");\r\n                    navigate(\"/Admin\");\r\n                }\r\n                else{\r\n                    alert(\"User registration unsuccessful!\");\r\n                    navigate(\"/Registration\");\r\n                }\r\n            }\r\n            );\r\n\r\n        }\r\n        else if(role===\"client\"){\r\n            fetch(\"http://localhost:8080/reg_client\",reqOptions)\r\n            .then(resp=> {\r\n                if(resp.status===200){\r\n                    alert(\"User registration successful!\");\r\n                    navigate(\"/Admin\");\r\n                }\r\n                else{\r\n                    alert(\"User registration unsuccessful!\");\r\n                    navigate(\"/Registration\");\r\n                }\r\n            });\r\n            \r\n        }\r\n        \r\n\r\n\r\n    }\r\n     return(\r\n\r\n        <div className=\"container\">\r\n         \r\n         <header>\r\n             <MDBNavbar expand='lg' light bgColor='white' fixed>\r\n                 <MDBContainer fluid>\r\n                 <MDBNavbarToggler\r\n                     aria-controls='navbarExample01'\r\n                     aria-expanded='false'\r\n                     aria-label='Toggle navigation'\r\n                 >\r\n                     <MDBIcon fas icon='bars' />\r\n                 </MDBNavbarToggler>\r\n                 <div className='collapse navbar-collapse' id='navbarExample01'>\r\n                     <MDBNavbarNav right className='mb-2 mb-lg-0'>\r\n                     <MDBNavbarItem active>\r\n                         <MDBNavbarLink aria-current='page' href='/Admin'>\r\n                         Home\r\n                         </MDBNavbarLink>\r\n                     </MDBNavbarItem>\r\n                     <MDBNavbarItem>\r\n                         <MDBNavbarLink href='/Registration'>Add User</MDBNavbarLink>\r\n                     </MDBNavbarItem>\r\n                     <MDBNavbarItem>\r\n                         <MDBNavbarLink href='/ChangePassword'>Change Password</MDBNavbarLink>\r\n                     </MDBNavbarItem>\r\n                     <MDBNavbarItem>\r\n                         <MDBNavbarLink href='/CreateProject'>Create Project</MDBNavbarLink>\r\n                     </MDBNavbarItem>\r\n                     <MDBNavbarItem>\r\n                     <select name=\"setting\" id=\"setting\" className=\"form-control\" onClick={(ev)=>navigate(ev.target.value)}>    \r\n                        <option value=\"\">Settings </option>\r\n                        <option value=\"../UpdateAccount\">Update Account Info </option>\r\n                        <option value=\"../Logout\">Logout</option>\r\n                        </select>\r\n                     </MDBNavbarItem>\r\n                     </MDBNavbarNav>\r\n                 </div>\r\n                 </MDBContainer>\r\n             </MDBNavbar>\r\n         </header><br/>\r\n       \r\n \r\n         <form>\r\n         <div className=\"container\" style={{width: '40%', height:'50%', marginTop: '8%', marginLeft: '25', marginRight: '25%'}}>\r\n           <div style={{ width: '23rem' }}>\r\n                 <h4>Add New User</h4>\r\n                     <MDBInput label='Enter Username' name=\"Username\" type='text' size='lg' onChange={(ev)=>setUsername(ev.target.value) }/>\r\n                     <br />\r\n \r\n                     <MDBInput label='Enter Password' name=\"Password\" type='Password' size='lg' onChange={(ev)=>setPassword(ev.target.value) }/>\r\n                     <br />\r\n \r\n                     <MDBInput label='Enter First Name' name=\"Fname\" type='text' size='lg' onChange={(ev)=>setFname(ev.target.value) }/>\r\n                     <br />\r\n\r\n                     <MDBInput label='Enter Last Name' name=\"Lastname\" type='text' size='lg' onChange={(ev)=>setLname(ev.target.value) }/>\r\n                     <br />\r\n\r\n                     <MDBInput label='Enter Email id' name=\"Email\" type='email' size='lg' onChange={(ev)=>setEmail(ev.target.value) }/>\r\n                     <br />\r\n\r\n                     <MDBInput label='Enter Contact No' name=\"Contactno\" type='text' size='lg' onChange={(ev)=>setContactno(ev.target.value) }/>\r\n                     <br />\r\n \r\n                     <select name=\"role\" id=\"role\" className=\"form-control\" onClick={(ev)=>setRole(ev.target.value)}>    \r\n                        <option value=\"\">Choose Role </option>\r\n                        <option value=\"employee\">Employee</option>\r\n                        <option value=\"manager\">Manager</option>\r\n                        <option value=\"client\">Client</option>\r\n                        </select>\r\n                    <br/>\r\n                     <MDBBtn type=\"submit\" onClick={(ev)=>submitForm(ev)}>Add User</MDBBtn>\r\n          </div>    \r\n        </div>\r\n         </form>\r\n \r\n         </div>\r\n       \r\n       \r\n     ); \r\n}\r\n\r\nexport default Registration;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\CreateProject.js",[],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\UpdateProject.js",["151","152","153","154"],[],"import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport { MDBBtn, MDBInput } from \"mdb-react-ui-kit\";\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarLink,\r\n    MDBNavbarToggler,\r\n    MDBContainer,\r\n    MDBIcon\r\n  } from 'mdb-react-ui-kit';\r\n\r\nfunction UpdateProject(){\r\n\r\n    let navigate = useNavigate();\r\n    let mgrid = \"\";\r\n    const[managerid, setManagerId] = useState(\"\");\r\n    const[projectname, setProjectname] = useState(\"\");\r\n    const[project_desc, setProjectdesc] = useState(\"\");\r\n    const[enddate, setEnddate] = useState(\"\");\r\n    const [projects, setProjects] = useState({})\r\n\r\n    const search = useLocation().search;\r\n\r\n    const projectid = new URLSearchParams(search).get('projectid');\r\n    //console.log(projectid);\r\n    const fetchData = () => {\r\n        console.log(projectid);\r\n        \r\n        fetch(\"http://localhost:8080/search_by_projectid?projectid=\"+projectid)\r\n          .then(response => {\r\n            return response.json()\r\n             \r\n          })\r\n          .then(data => {\r\n            // const fields = [managerid, projectname, project_desc, enddate]\r\n            // fields.forEach(field =>setValue(field, data[field]));\r\n            setProjects(data)\r\n            setManagerId(data.managerid)\r\n            setProjectname(data.projectname)\r\n            setProjectdesc(data.project_desc)\r\n            //setEnddate(data.enddate?data.enddate:\"\")\r\n            let edate = new Date(data.enddate).toISOString().split('T')[0]\r\n            //date = data.enddate\r\n            console.log(edate);\r\n            mgrid = data.managerid;\r\n            setEnddate(edate?edate:\"\")\r\n            //console.log(projects.projectname);\r\n          })\r\n        //   projects.map((data)=>{\r\n        //     return(\r\n        //         console.log(data.managerid)\r\n        //     )})\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n        //console.log(projects.projectid);\r\n        // .then((response) =>{\r\n        //     setManagerId(response.data.managerid)\r\n        //     setProjectname(response.data.projectname)\r\n        //     setProjectdesc(response.data.project_desc)\r\n        //     setEnddate(response.data.enddate)\r\n        // }).catch(error => {\r\n        //     console.log(error)\r\n        // })\r\n    }, [])\r\n\r\n    const submitForm=(ev)=>{\r\n        ev.preventDefault();\r\n\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers :{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                managerid: managerid,\r\n                projectname: projectname,\r\n                project_desc: project_desc,\r\n                enddate: enddate\r\n            })\r\n        }\r\n        //console.log(project_desc);\r\n        fetch(\"http://localhost:8080/update_project?managerid=\"+managerid+\"&&projectname=\"+projectname+\"&&project_desc=\"+project_desc+\"&&enddate=\"+enddate+\"&&projectid=\"+projectid)\r\n        .then(resp =>{\r\n            if(resp.status===200){\r\n                alert(\"Project updated successfully!\");\r\n                navigate(\"/Admin\");\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <header>\r\n            <MDBNavbar expand='lg' light bgColor='white' fixed>\r\n                <MDBContainer fluid>\r\n                <MDBNavbarToggler\r\n                    aria-controls='navbarExample01'\r\n                    aria-expanded='false'\r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <MDBIcon fas icon='bars' />\r\n                </MDBNavbarToggler>\r\n                <div className='collapse navbar-collapse' id='navbarExample01'>\r\n                    <MDBNavbarNav right className='mb-2 mb-lg-0'>\r\n                    <MDBNavbarItem active>\r\n                        <MDBNavbarLink aria-current='page' href='/Admin'>\r\n                        Home\r\n                        </MDBNavbarLink>\r\n                    </MDBNavbarItem>\r\n                    <MDBNavbarItem>\r\n                        <MDBNavbarLink href='/Registration'>Add User</MDBNavbarLink>\r\n                    </MDBNavbarItem>\r\n                    <MDBNavbarItem>\r\n                         <MDBNavbarLink href='/ChangePassword'>Change Password</MDBNavbarLink>\r\n                     </MDBNavbarItem>\r\n                     <MDBNavbarItem>\r\n                         <MDBNavbarLink href='/CreateProject'>Create Project</MDBNavbarLink>\r\n                     </MDBNavbarItem>\r\n                     <MDBNavbarItem>\r\n                     <select name=\"setting\" id=\"setting\" className=\"form-control\" onClick={(ev)=>navigate(ev.target.value)}>    \r\n                        <option value=\"\">Settings </option>\r\n                        <option value=\"../UpdateAccount\">Update Account Info </option>\r\n                        <option value=\"../Logout\">Logout</option>\r\n                        </select>\r\n                     </MDBNavbarItem>\r\n                    </MDBNavbarNav>\r\n                </div>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </header><br/>\r\n            <form>           \r\n                        \r\n                <div style={{ width: '23rem' }}>\r\n                <h4>Update Project</h4>\r\n                \r\n                    <MDBInput label='Enter manager id' name=\"managerid\" value={managerid} type='text' size='lg' onChange={(ev)=>setManagerId(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Project name' name=\"projectname\" value={projectname} type='text' size='lg' onChange={(ev)=>setProjectname(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Project desc' name=\"projectdesc\" value={project_desc} type='text' size='lg' onChange={(ev)=>setProjectdesc(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter End date' name=\"enddate\" value={enddate} type='date' size='lg' onChange={(ev)=>setEnddate(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBBtn type=\"submit\" onClick={(ev)=>submitForm(ev)}>Update</MDBBtn>\r\n                    \r\n                </div>    \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateProject;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\InsertTask.js",["155"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport React, { useState } from 'react'\r\nimport { MDBBtn, MDBInput } from \"mdb-react-ui-kit\";\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarLink,\r\n    MDBNavbarToggler,\r\n    MDBContainer,\r\n    MDBIcon\r\n  } from 'mdb-react-ui-kit';\r\nimport { useEffect} from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nfunction InsertTask(){\r\n    const [emp, setEmp] = useState([])\r\n\r\n    let navigate = useNavigate();\r\n    const[task_name, setTaskname] = useState(\"\");\r\n    const[start_date, setStartdate] = useState(\"\");\r\n    const[end_date, setEnddate] = useState(\"\");\r\n    //const[projectid, setProjectid] = useState(\"\");\r\n    const[status, setStatus] = useState(\"\");\r\n    const[description, setDescription] = useState(\"\");\r\n    const[priority, setPriority] = useState(\"\");\r\n    const[teammember_id, setTeammemberid] = useState(\"\");\r\n\r\n    const search = useLocation().search;\r\n\r\n    const projectid = new URLSearchParams(search).get('projectid');\r\n\r\n    const submitForm=(ev)=>{\r\n        ev.preventDefault();\r\n\r\n        let url=\"http://localhost:8080/insert_task?task_name=\"+task_name+\"&&start_date=\"+start_date+\"&&end_date=\"+end_date+\"&&projectid=\"+projectid+\"&&status=\"+status+\"&&description=\"+description+\"&&priority=\"+priority+\"&&teammember_id=\"+teammember_id;\r\n        //alert(url);\r\n        fetch(url)\r\n        .then(resp =>{\r\n            if(resp.status===200){\r\n                alert(\"New Task inserted!\");\r\n                navigate(\"/Manager\");\r\n            }\r\n    })\r\n }\r\n const fetchData = () => {\r\n    fetch(\"http://localhost:8080/view_all_emp\")\r\n      .then(response => {\r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        setEmp(data)\r\n        console.log(data)\r\n      })\r\n}\r\n\r\nuseEffect(() => {\r\n    fetchData()\r\n  }, [])\r\nreturn(\r\n\r\n       <div className=\"container\">\r\n        \r\n        <header>\r\n            <MDBNavbar expand='lg' light bgColor='white' fixed>\r\n                <MDBContainer fluid>\r\n                <MDBNavbarToggler\r\n                    aria-controls='navbarExample01'\r\n                    aria-expanded='false'\r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <MDBIcon fas icon='bars' />\r\n                </MDBNavbarToggler>\r\n                <div className='collapse navbar-collapse' id='navbarExample01'>\r\n                    <MDBNavbarNav right className='mb-2 mb-lg-0'>\r\n                    <MDBNavbarItem active>\r\n                        <MDBNavbarLink aria-current='page' href='/Manager'>\r\n                        Home\r\n                        </MDBNavbarLink>\r\n                    </MDBNavbarItem>\r\n                    <MDBNavbarItem>\r\n                        <MDBNavbarLink href='/ChangePassword'>Change Password</MDBNavbarLink>\r\n                    </MDBNavbarItem>\r\n                    <MDBNavbarItem>\r\n                     <select name=\"setting\" id=\"setting\" className=\"form-control\" onClick={(ev)=>navigate(ev.target.value)}>    \r\n                        <option value=\"\">Settings </option>\r\n                        <option value=\"../UpdateAccount\">Update Account Info </option>\r\n                        <option value=\"../Logout\">Logout</option>\r\n                        </select>\r\n                     </MDBNavbarItem>\r\n                    </MDBNavbarNav>\r\n                </div>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </header><br/>\r\n        List of employees:\r\n        <table className=\"table table-bordered table-hover\" style={{border: 'solid'}}>\r\n            <thead>\r\n                <tr>\r\n                <th>Employee id</th>\r\n                <th>Employee first name</th>\r\n                <th>Employee last name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    {\r\n                        emp.map((emp)=>{\r\n                            return(\r\n                                \r\n                                <tr key={emp.empid}> \r\n                                   <td>{emp.empid}</td>\r\n                                   <td>{emp.fname}</td> \r\n                                   <td>{emp.lname}</td> \r\n                                </tr>\r\n                                ) \r\n                            })\r\n                    }\r\n            </tbody>\r\n        </table>\r\n\r\n        <form>\r\n        <div className=\"container\" style={{width: '40%', height:'50%', marginTop: '8%', marginLeft: '25', marginRight: '25%'}}>\r\n          <div style={{ width: '23rem' }}>\r\n                <h4>Create Task</h4>\r\n                    <MDBInput label='Enter Task name' name=\"taskname\" type='text' size='lg' onChange={(ev)=>setTaskname(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Start date' name=\"startdate\" type='date' size='lg' onChange={(ev)=>setStartdate(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter End date' name=\"enddate\" type='date' size='lg' onChange={(ev)=>setEnddate(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter project id' name=\"projectid\" value={projectid} type='disable' size='lg' />\r\n                    <br />\r\n\r\n                    <select name=\"status\" id=\"status\" className=\"form-control\" onChange={(ev)=>setStatus(ev.target.value) }>    \r\n                        <option value=\"\">Choose status </option>\r\n                        <option value=\"To do\">To do</option>\r\n                        <option value=\"In Progress\">In progress</option>\r\n                        \r\n                    </select>\r\n                    <br/>\r\n\r\n                    <MDBInput label='Enter description' name=\"description\" type='text' size='lg' onChange={(ev)=>setDescription(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <select name=\"priority\" id=\"priority\" className=\"form-control\" onChange={(ev)=>setPriority(ev.target.value) }>    \r\n                        <option value=\"\">Choose priority </option>\r\n                        <option value=\"low\">Low</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option value=\"high\">High</option>\r\n                    </select>\r\n                    <br/>\r\n\r\n\r\n                    <MDBInput label='Enter teammember id' name=\"teammemberid\" type='text' size='lg' onChange={(ev)=>setTeammemberid(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBBtn type=\"submit\" onClick={(ev)=>submitForm(ev)}>Insert</MDBBtn>\r\n         </div>    \r\n        </div>\r\n        </form>\r\n\r\n        </div>\r\n      \r\n      \r\n    ); \r\n}\r\n    \r\nexport default InsertTask;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\UpdateAccount.js",["156","157","158","159"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport React, { useState } from 'react'\r\nimport { MDBBtn, MDBInput } from \"mdb-react-ui-kit\";\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarLink,\r\n    MDBNavbarToggler,\r\n    MDBContainer,\r\n    MDBIcon\r\n  } from 'mdb-react-ui-kit';\r\n\r\nfunction UpdateAccount(){\r\n    let navigate = useNavigate();\r\n    const[fname, setfname] = useState(\"\");\r\n    const[lname, setlname] = useState(\"\");\r\n    const[email, setemail] = useState(\"\");\r\n    const[contactno, setcontactno] = useState(\"\");\r\n    const[empid, setempid] = useState(\"\");\r\n    \r\n\r\n    const submitForm=(ev)=>{\r\n        ev.preventDefault();\r\n\r\n        const reqOptions = {\r\n            method: 'GET',\r\n            headers :{\r\n                'Content-Type':'application/text'\r\n            }\r\n        }\r\n        let url=\"http://localhost:8080/update_employee_account?fname=\"+fname+\"&&lname=\"+lname+\"&&email=\"+email+\"&&contactno=\"+contactno+\"&&empid=\"+empid;\r\n        fetch(url)\r\n        .then(resp =>{\r\n            if(resp.status===200){\r\n                alert(\"Account information updated successfully!\");\r\n                navigate(\"/Admin\");\r\n            }\r\n    })\r\n }\r\nreturn(\r\n\r\n       <div className=\"container\">\r\n        \r\n        <header>\r\n            <MDBNavbar expand='lg' light bgColor='white' fixed>\r\n                <MDBContainer fluid>\r\n                <MDBNavbarToggler\r\n                    aria-controls='navbarExample01'\r\n                    aria-expanded='false'\r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <MDBIcon fas icon='bars' />\r\n                </MDBNavbarToggler>\r\n                <div className='collapse navbar-collapse' id='navbarExample01'>\r\n                    \r\n                    \r\n                </div>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </header><br/>\r\n      \r\n\r\n        <form>\r\n        <div className=\"container\" style={{width: '40%', height:'50%', marginTop: '8%', marginLeft: '25', marginRight: '25%'}}>\r\n          <div style={{ width: '23rem' }}>\r\n                <h4>Update Account Information</h4>\r\n                    <MDBInput label='Enter First Name' name=\"fname\" type='text' size='lg' onChange={(ev)=>setfname(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Last Name' name=\"lname\" type='text' size='lg' onChange={(ev)=>setlname(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Email' name=\"email\" type='email' size='lg' onChange={(ev)=>setemail(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Contact No' name=\"contactno\" type='text' size='lg' onChange={(ev)=>setcontactno(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Employee Id' name=\"empid\" type='text' size='lg' onChange={(ev)=>setempid(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    \r\n\r\n                    <MDBBtn type=\"submit\" onClick={(ev)=>submitForm(ev)}>Update</MDBBtn>\r\n         </div>    \r\n         </div>\r\n        </form>\r\n\r\n        </div>\r\n      \r\n      \r\n    ); \r\n}\r\n    \r\nexport default UpdateAccount;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\ChangePassword.js",["160","161","162"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport React, { useState } from 'react'\r\nimport { MDBBtn, MDBInput } from \"mdb-react-ui-kit\";\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarLink,\r\n    MDBNavbarToggler,\r\n    MDBContainer,\r\n    MDBIcon\r\n  } from 'mdb-react-ui-kit';\r\n\r\nfunction ChangePassword(){\r\n    let navigate = useNavigate();\r\n    const[newpassword, setnewpassword] = useState(\"\");\r\n    const[confirmpassword, setconfirmpassword] = useState(\"\");\r\n    const[username, setusername] = useState(\"\");\r\n    \r\n    \r\n\r\n    const submitForm=(ev)=>{\r\n        ev.preventDefault();\r\n\r\n        let url=\"http://localhost:8080/update_password?password=\"+newpassword+\"&&username=\"+username;\r\n        if(confirmpassword===newpassword)\r\n        {\r\n         fetch(url)\r\n          .then(resp =>{\r\n            if(resp.status===200){\r\n                alert(\"Password updated successfully!\");\r\n               navigate(\"/Login\");\r\n            }\r\n        \r\n        })\r\n        }\r\n        else\r\n            alert(\"Password does not match\");\r\n }\r\nreturn(\r\n\r\n       <div className=\"container\">\r\n        \r\n        <header>\r\n            <MDBNavbar expand='lg' light bgColor='white' fixed>\r\n                <MDBContainer fluid>\r\n                <MDBNavbarToggler\r\n                    aria-controls='navbarExample01'\r\n                    aria-expanded='false'\r\n                    aria-label='Toggle navigation'\r\n                >\r\n                <MDBIcon fas icon='bars' />\r\n                </MDBNavbarToggler>\r\n                <div className='collapse navbar-collapse' id='navbarExample01'>\r\n                    \r\n                </div>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </header><br/>\r\n      \r\n\r\n        <form>\r\n        <div className=\"container\" style={{width: '40%', height:'50%', marginTop: '8%', marginLeft: '25', marginRight: '25%'}}>\r\n          <div style={{ width: '23rem' }}>\r\n                <h4>Change Password</h4>\r\n                    <MDBInput label='Enter New Password' name=\"newpassword\" type='password' size='lg' onChange={(ev)=>setnewpassword(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Confirm Password' name=\"confirmpassword\" type='password' size='lg' onChange={(ev)=>setconfirmpassword(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Username' name=\"username\" type='text' size='lg' onChange={(ev)=>setusername(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBBtn type=\"submit\" onClick={(ev)=>submitForm(ev)}>change Password</MDBBtn>\r\n         </div>    \r\n         </div>\r\n        </form>\r\n\r\n        </div>\r\n      \r\n      \r\n    ); \r\n}\r\n    \r\nexport default ChangePassword;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Logout.js",[],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\ProjectDetails.js",["163","164","165","166"],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\LandingPage.js",[],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\ShowTasks.js",["167","168","169"],[],"C:\\Users\\omkar\\pms\\frontend\\src\\component\\UpdateTask.js",["170","171"],[],"import React, { useState,useEffect } from 'react'\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { MDBBtn, MDBInput } from \"mdb-react-ui-kit\";\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarLink,\r\n    MDBNavbarToggler,\r\n    MDBContainer,\r\n    MDBIcon\r\n  } from 'mdb-react-ui-kit';\r\n\r\n\r\nfunction UpdateTask(){\r\n\r\n    let navigate = useNavigate();\r\n    const[task_name, setTaskname] = useState(\"\");\r\n    const[start_date, setStartdate] = useState(\"\");\r\n    const[end_date, setEnddate] = useState(\"\");\r\n    const[description, setDescription] = useState(\"\");\r\n    const[priority, setPriority] = useState(\"\");\r\n    const[teammember_id,setTeammemberid ] = useState(\"\");\r\n    \r\n    const search = useLocation().search;\r\n\r\n    const taskid = new URLSearchParams(search).get('taskid');\r\n    //console.log(projectid);\r\n    const fetchData = () => {\r\n        console.log(taskid);\r\n        \r\n        fetch(\"http://localhost:8080/view_task_by_taskid?taskid=\"+taskid)\r\n          .then(response => {\r\n            return response.json()\r\n             \r\n          })\r\n          .then(data => {\r\n            \r\n            setTaskname(data.task_name)\r\n            setDescription(data.description)\r\n            setPriority(data.priority)\r\n            setTeammemberid(data.teammember_id)\r\n            \r\n\r\n            let sdate = new Date(data.start_date).toISOString().split('T')[0]\r\n            //date = data.enddate\r\n            console.log(data);\r\n            console.log(sdate);\r\n           \r\n            setStartdate(sdate?sdate:\"\")\r\n            //console.log(projects.projectname);\r\n            //setEnddate(data.enddate?data.enddate:\"\")\r\n\r\n\r\n            let edate = new Date(data.end_date).toISOString().split('T')[0]\r\n            //date = data.enddate\r\n            console.log(edate);\r\n           \r\n            setEnddate(edate?edate:\"\")\r\n            //console.log(projects.projectname);\r\n          })\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const submitForm=(ev)=>{\r\n        ev.preventDefault();\r\n\r\n        const reqOptions = {\r\n            method: 'GET',\r\n            headers :{\r\n                'Content-Type':'application/text'\r\n            }\r\n        }\r\n        //console.log(project_desc);\r\n        let url=\"http://localhost:8080/update_task?task_name=\"+task_name+\"&&start_date=\"+start_date+\"&&end_date=\"+end_date+\"&&description=\"+description+\"&&priority=\"+priority+\"&&teammember_id=\"+teammember_id+\"&&taskid=\"+taskid;\r\n        //alert(url);\r\n        fetch(url)\r\n        .then(resp =>{\r\n            if(resp.status===200){\r\n                alert(\"Task updated successfully!\");\r\n                navigate(\"/Manager\");\r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"container\">\r\n\r\n            \r\n        <header>\r\n            <MDBNavbar expand='lg' light bgColor='white' fixed>\r\n                <MDBContainer fluid>\r\n                <MDBNavbarToggler\r\n                    aria-controls='navbarExample01'\r\n                    aria-expanded='false'\r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <MDBIcon fas icon='bars' />\r\n                </MDBNavbarToggler>\r\n                <div className='collapse navbar-collapse' id='navbarExample01'>\r\n                    <MDBNavbarNav right className='mb-2 mb-lg-0'>\r\n                    <MDBNavbarItem active>\r\n                        <MDBNavbarLink aria-current='page' href='/Manager'>\r\n                        Home\r\n                        </MDBNavbarLink>\r\n                    </MDBNavbarItem>\r\n                    <MDBNavbarItem>\r\n                        <MDBNavbarLink href='/ChangePassword'>Change Password</MDBNavbarLink>\r\n                    </MDBNavbarItem>\r\n                    <MDBNavbarItem>\r\n                    <select name=\"setting\" id=\"setting\" className=\"form-control\" onClick={(ev)=>navigate(ev.target.value)}>    \r\n                        <option value=\"\">Settings </option>\r\n                        <option value=\"../UpdateAccount\">Update Account Info </option>\r\n                        <option value=\"../Logout\">Logout</option>\r\n                        </select>\r\n                    </MDBNavbarItem>\r\n                    </MDBNavbarNav>\r\n                </div>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </header><br/>\r\n      \r\n\r\n<form>\r\n<div className=\"container\" style={{width: '40%', height:'50%', marginTop: '8%', marginLeft: '25', marginRight: '25%'}}>\r\n          <div style={{ width: '23rem' }}>\r\n                <h4>Update Task</h4>\r\n                    <MDBInput label='Enter Task name' name=\"taskname\" value={task_name} type='text' size='lg' onChange={(ev)=>setTaskname(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Start date' name=\"startdate\" value={start_date} type='date' size='lg' onChange={(ev)=>setStartdate(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter End date' name=\"enddate\" value={end_date} type='date' size='lg' onChange={(ev)=>setEnddate(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter description' name=\"description\" value={description} type='text' size='lg' onChange={(ev)=>setDescription(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBInput label='Enter Priority' name=\"priority\"  value={priority} type='text' size='lg' onChange={(ev)=>setPriority(ev.target.value) }/>\r\n                    <br />\r\n\r\n\r\n                    <MDBInput label='Enter teammember id' name=\"teammemberid\" value={teammember_id} type='text' size='lg' onChange={(ev)=>setTeammemberid(ev.target.value) }/>\r\n                    <br />\r\n\r\n                    <MDBBtn type=\"submit\" onClick={(ev)=>submitForm(ev)}>Update</MDBBtn>\r\n         </div>    \r\n</div>\r\n</form>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateTask;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\UpdateStatus.js",["172","173","174"],[],"import React, { useState,useEffect } from 'react'\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { MDBBtn, MDBInput } from \"mdb-react-ui-kit\";\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarLink,\r\n    MDBNavbarToggler,\r\n    MDBContainer,\r\n    MDBIcon\r\n  } from 'mdb-react-ui-kit';\r\n\r\n\r\nfunction UpdateStatus(){\r\n\r\n    let navigate = useNavigate();\r\n    \r\n    const search = useLocation().search;\r\n\r\n    const taskid = new URLSearchParams(search).get('taskid');\r\n    const [status, setStatus] = useState(\"\")\r\n    //console.log(projectid);\r\n    const fetchData = () => {\r\n        console.log(taskid);\r\n        \r\n        fetch(\"http://localhost:8080/view_task_by_taskid?taskid=\"+taskid)\r\n          .then(response => {\r\n            return response.json()\r\n             \r\n          })\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const submitForm=(ev)=>{\r\n        ev.preventDefault();\r\n\r\n        const reqOptions = {\r\n            method: 'GET',\r\n            headers :{\r\n                'Content-Type':'application/text'\r\n            }\r\n        }\r\n        //console.log(project_desc);\r\n        let url=\"http://localhost:8080/update_task_by_employee?status=\"+status+\"&&taskid=\"+taskid;\r\n        //alert(url);\r\n        fetch(url)\r\n        .then(resp =>{\r\n            if(resp.status===200){\r\n                alert(\"Task status updated successfully!\");\r\n                navigate(\"/Employee\");\r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"container\">\r\n\r\n            \r\n        <header>\r\n            <MDBNavbar expand='lg' light bgColor='white' fixed>\r\n                <MDBContainer fluid>\r\n                <MDBNavbarToggler\r\n                    aria-controls='navbarExample01'\r\n                    aria-expanded='false'\r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <MDBIcon fas icon='bars' />\r\n                </MDBNavbarToggler>\r\n                <div className='collapse navbar-collapse' id='navbarExample01'>\r\n                    <MDBNavbarNav right className='mb-2 mb-lg-0'>\r\n                    <MDBNavbarItem active>\r\n                        <MDBNavbarLink aria-current='page' href='/Employee'>\r\n                        Home\r\n                        </MDBNavbarLink>\r\n                    </MDBNavbarItem>\r\n                    <MDBNavbarItem>\r\n                        <MDBNavbarLink href='/ChangePassword'>Change Password</MDBNavbarLink>\r\n                    </MDBNavbarItem>\r\n                    <MDBNavbarItem>\r\n                    <select name=\"setting\" id=\"setting\" className=\"form-control\" onClick={(ev)=>navigate(ev.target.value)}>    \r\n                        <option value=\"\">Settings </option>\r\n                        <option value=\"../UpdateAccount\">Update Account Info </option>\r\n                        <option value=\"../Logout\">Logout</option>\r\n                        </select>\r\n                    </MDBNavbarItem>\r\n                    </MDBNavbarNav>\r\n                </div>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </header><br/>\r\n      \r\n\r\n<form>\r\n          <div style={{ width: '23rem' }}>\r\n                <h4>Update Task</h4>\r\n                <select name=\"update_status\" id=\"update_status\" className=\"form-control\" onChange={(ev)=>setStatus(ev.target.value) }>    \r\n                        <option value=\"\">Choose status </option>\r\n                        <option value=\"To do\">To do</option>\r\n                        <option value=\"In Progress\">In progress</option>\r\n                        <option value=\"Complete\">Complete</option>\r\n                </select>\r\n                <br/>\r\n                <MDBBtn type=\"submit\" onClick={(ev)=>submitForm(ev)}>Update Status</MDBBtn>\r\n         </div>    \r\n\r\n        </form>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateStatus;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\ShowProgres.js",["175","176","177","178","179","180","181","182","183"],[],"import {VictoryPie} from 'victory';\r\nimport React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nfunction ShowProgress(){\r\n\r\n    const [tasks, setTasks] = useState([])\r\n    const search = useLocation().search;\r\n\r\n    //const [pie1, setPie1] = useState([]);\r\n    //const [pie2, setPie2] = useState([]);\r\n    //const [pie3, setPie3] = useState([]);\r\n\r\n    let pie1 = \"\";\r\n    let pie2 = \"\";\r\n    let pie3 = \"\";\r\n    const projectid = new URLSearchParams(search).get('projectid');\r\n\r\n    ChartJS.register(ArcElement, Tooltip, Legend);\r\n    var var1;\r\n    var var2;\r\n    var var3;\r\n    //let sampleData;\r\n\r\n    const fetchData = () => {\r\n        fetch(\"http://localhost:8080/view_status_count?projectid=\"+projectid)\r\n          .then(response => {\r\n            return response.json()\r\n          })\r\n          .then(data => {\r\n            setTasks(data)\r\n            console.log(data)\r\n            console.log(data[0])\r\n            pie1 = new String(data[0]).split(',');\r\n            //setPie1(data[0]).split(',');\r\n            pie2 = new String(data[1]).split(',');\r\n            pie3 = new String(data[2]).split(',');\r\n            //let count = str.split(',');\r\n            var1 = parseInt(pie1[0], 10);\r\n            var2 = parseInt(pie2[0], 10);\r\n            var3 = parseInt(pie3[0], 10);\r\n            console.log(var1);\r\n            console.log(var2);            \r\n            console.log(var3);\r\n            console.log(typeof(var1));\r\n          })\r\n    }\r\n    const fetchProjectStatus = () => {\r\n      fetch(\"http://localhost:8080/view_task_by_project?projectid=\"+projectid)\r\n        .then(response => {\r\n          return response.json()\r\n        })\r\n        .then(data => {\r\n          setTasks(data)\r\n          console.log(data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n        fetchProjectStatus()\r\n      }, [])\r\n\r\n    const sampleData = [\r\n        {x:\"Complete\", y: var1},\r\n        {x:\"In Progress\", y: var2},\r\n        {x:\"To do\", y: var3}\r\n    ];\r\n\r\n    const data = {\r\n        labels: ['Complete', 'In Progress', 'To do'],\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: [var1, var2, var3],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\nreturn(\r\n    <div className=\"container\" style={{height:600, width: 600}}>\r\n      List of Tasks:\r\n        <table className=\"table table-bordered table-hover\" style={{border: 'solid'}}>\r\n            <thead>\r\n                <tr>\r\n                <th>Task id</th>\r\n                <th>Task name</th>\r\n                <th>Task status</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    {\r\n                        tasks.map((task)=>{\r\n                            return(\r\n                                \r\n                                <tr key={task.taskid}> \r\n                                   <td>{task.taskid}</td>\r\n                                   <td>{task.task_name}</td> \r\n                                   <td>{task.status}</td> \r\n                                </tr>\r\n                                ) \r\n                            })\r\n                    }\r\n            </tbody>\r\n        </table>\r\n        {/* <VictoryPie\r\n            colorScale={[\"cyan\", \"orange\", \"navy\" ]}\r\n            data={[\r\n                {x:\"Complete\", y: var1},\r\n                {x:\"In Progress\", y: var2},\r\n                {x:\"To do\", y: var3}\r\n            ]}\r\n            \r\n        /> */}\r\n        {/* <Pie data={data} /> */}\r\n\r\n\r\n    </div>\r\n);    \r\n}\r\n\r\nexport default ShowProgress;","C:\\Users\\omkar\\pms\\frontend\\src\\component\\Home.js",["184","185","186"],[],"import { React, useState } from \"react\";\r\nimport { Container, Nav, Navbar, Overlay } from \"react-bootstrap\";\r\nimport pic from \"../image/Home.jpeg\"\r\n\r\nfunction Home() {\r\n    \r\n    return (\r\n        <div className=\"overlay\">\r\n            <div className=\"content\">\r\n                <div className=\"content\">\r\n                    <Navbar bg=\"dark\" variant=\"dark\">\r\n                        <Container>\r\n                            {/*<Navbar.Brand href=\"/\" style={{textAlign : \"center\"}}><span style={{ margin: '10px' }}></span>Project Management System</Navbar.Brand>*/}\r\n                            <span style={{ margin: '10px' }}></span>\r\n                            <Nav className=\"me-auto\">\r\n                                <Nav.Link href=\"/login\">Login</Nav.Link>\r\n                               \r\n                            </Nav>\r\n                        </Container>\r\n                    </Navbar>\r\n                    <img src = {pic} width=\"100%\" height=\"660px\" /><br />\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;",{"ruleId":"187","severity":1,"message":"188","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":13},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"187","severity":1,"message":"195","line":17,"column":8,"nodeType":"189","messageId":"190","endLine":17,"endColumn":18},{"ruleId":"187","severity":1,"message":"196","line":23,"column":21,"nodeType":"189","messageId":"190","endLine":23,"endColumn":24},{"ruleId":"187","severity":1,"message":"197","line":23,"column":34,"nodeType":"189","messageId":"190","endLine":23,"endColumn":41},{"ruleId":"198","severity":1,"message":"199","line":35,"column":22,"nodeType":"200","messageId":"201","endLine":35,"endColumn":24},{"ruleId":"198","severity":1,"message":"199","line":39,"column":27,"nodeType":"200","messageId":"201","endLine":39,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":43,"column":27,"nodeType":"200","messageId":"201","endLine":43,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":47,"column":27,"nodeType":"200","messageId":"201","endLine":47,"endColumn":29},{"ruleId":"202","severity":1,"message":"203","line":3,"column":5,"nodeType":"204","messageId":"205","endLine":9,"endColumn":6},{"ruleId":"206","severity":1,"message":"207","line":43,"column":10,"nodeType":"208","endLine":43,"endColumn":12,"suggestions":"209"},{"ruleId":"206","severity":1,"message":"207","line":38,"column":10,"nodeType":"208","endLine":38,"endColumn":12,"suggestions":"210"},{"ruleId":"206","severity":1,"message":"207","line":41,"column":10,"nodeType":"208","endLine":41,"endColumn":12,"suggestions":"211"},{"ruleId":"187","severity":1,"message":"212","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":15},{"ruleId":"187","severity":1,"message":"213","line":17,"column":9,"nodeType":"189","messageId":"190","endLine":17,"endColumn":14},{"ruleId":"187","severity":1,"message":"214","line":22,"column":12,"nodeType":"189","messageId":"190","endLine":22,"endColumn":20},{"ruleId":"206","severity":1,"message":"207","line":68,"column":8,"nodeType":"208","endLine":68,"endColumn":10,"suggestions":"215"},{"ruleId":"187","severity":1,"message":"216","line":73,"column":15,"nodeType":"189","messageId":"190","endLine":73,"endColumn":25},{"ruleId":"187","severity":1,"message":"217","line":14,"column":10,"nodeType":"189","messageId":"190","endLine":14,"endColumn":14},{"ruleId":"187","severity":1,"message":"218","line":6,"column":5,"nodeType":"189","messageId":"190","endLine":6,"endColumn":17},{"ruleId":"187","severity":1,"message":"219","line":7,"column":5,"nodeType":"189","messageId":"190","endLine":7,"endColumn":18},{"ruleId":"187","severity":1,"message":"220","line":8,"column":5,"nodeType":"189","messageId":"190","endLine":8,"endColumn":18},{"ruleId":"187","severity":1,"message":"216","line":26,"column":15,"nodeType":"189","messageId":"190","endLine":26,"endColumn":25},{"ruleId":"187","severity":1,"message":"218","line":6,"column":5,"nodeType":"189","messageId":"190","endLine":6,"endColumn":17},{"ruleId":"187","severity":1,"message":"219","line":7,"column":5,"nodeType":"189","messageId":"190","endLine":7,"endColumn":18},{"ruleId":"187","severity":1,"message":"220","line":8,"column":5,"nodeType":"189","messageId":"190","endLine":8,"endColumn":18},{"ruleId":"187","severity":1,"message":"217","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":14},{"ruleId":"187","severity":1,"message":"221","line":10,"column":5,"nodeType":"189","messageId":"190","endLine":10,"endColumn":11},{"ruleId":"187","severity":1,"message":"222","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":41,"column":10,"nodeType":"208","endLine":41,"endColumn":12,"suggestions":"223"},{"ruleId":"187","severity":1,"message":"221","line":10,"column":5,"nodeType":"189","messageId":"190","endLine":10,"endColumn":11},{"ruleId":"187","severity":1,"message":"222","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":48,"column":10,"nodeType":"208","endLine":48,"endColumn":12,"suggestions":"224"},{"ruleId":"206","severity":1,"message":"207","line":67,"column":8,"nodeType":"208","endLine":67,"endColumn":10,"suggestions":"225"},{"ruleId":"187","severity":1,"message":"216","line":72,"column":15,"nodeType":"189","messageId":"190","endLine":72,"endColumn":25},{"ruleId":"187","severity":1,"message":"226","line":3,"column":18,"nodeType":"189","messageId":"190","endLine":3,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":37,"column":8,"nodeType":"208","endLine":37,"endColumn":10,"suggestions":"227"},{"ruleId":"187","severity":1,"message":"216","line":42,"column":15,"nodeType":"189","messageId":"190","endLine":42,"endColumn":25},{"ruleId":"187","severity":1,"message":"228","line":1,"column":9,"nodeType":"189","messageId":"190","endLine":1,"endColumn":19},{"ruleId":"187","severity":1,"message":"217","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":14},{"ruleId":"187","severity":1,"message":"229","line":6,"column":10,"nodeType":"189","messageId":"190","endLine":6,"endColumn":13},{"ruleId":"230","severity":1,"message":"231","line":37,"column":20,"nodeType":"232","messageId":"233","endLine":37,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":39,"column":20,"nodeType":"232","messageId":"233","endLine":39,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":40,"column":20,"nodeType":"232","messageId":"233","endLine":40,"endColumn":39},{"ruleId":"206","severity":1,"message":"234","line":64,"column":10,"nodeType":"208","endLine":64,"endColumn":12,"suggestions":"235"},{"ruleId":"187","severity":1,"message":"236","line":66,"column":11,"nodeType":"189","messageId":"190","endLine":66,"endColumn":21},{"ruleId":"187","severity":1,"message":"237","line":72,"column":11,"nodeType":"189","messageId":"190","endLine":72,"endColumn":15},{"ruleId":"187","severity":1,"message":"238","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"197","line":2,"column":34,"nodeType":"189","messageId":"190","endLine":2,"endColumn":41},{"ruleId":"239","severity":1,"message":"240","line":21,"column":21,"nodeType":"241","endLine":21,"endColumn":68},"no-unused-vars","'Admin' is defined but never used.","Identifier","unusedVar","no-native-reassign",["242"],"no-negated-in-lhs",["243"],"'LandinPage' is defined but never used.","'Nav' is defined but never used.","'Overlay' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["244"],["245"],["246"],"'mystore' is defined but never used.","'mgrid' is assigned a value but never used.","'projects' is assigned a value but never used.",["247"],"'reqOptions' is assigned a value but never used.","'Link' is defined but never used.","'MDBNavbarNav' is defined but never used.","'MDBNavbarItem' is defined but never used.","'MDBNavbarLink' is defined but never used.","'MDBBtn' is defined but never used.","'UpdateProject' is defined but never used.",["248"],["249"],["250"],"'MDBInput' is defined but never used.",["251"],"'VictoryPie' is defined but never used.","'Pie' is defined but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchProjectStatus'. Either include them or remove the dependency array.",["252"],"'sampleData' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"253","fix":"255"},{"desc":"253","fix":"256"},{"desc":"253","fix":"257"},{"desc":"253","fix":"258"},{"desc":"253","fix":"259"},{"desc":"253","fix":"260"},{"desc":"253","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [fetchData]",{"range":"264","text":"265"},{"range":"266","text":"265"},{"range":"267","text":"265"},{"range":"268","text":"265"},{"range":"269","text":"265"},{"range":"270","text":"265"},{"range":"271","text":"265"},{"range":"272","text":"265"},"Update the dependencies array to be: [fetchData, fetchProjectStatus]",{"range":"273","text":"274"},[1039,1041],"[fetchData]",[992,994],[1028,1030],[2337,2339],[1130,1132],[1501,1503],[2014,2016],[905,907],[2019,2021],"[fetchData, fetchProjectStatus]"]